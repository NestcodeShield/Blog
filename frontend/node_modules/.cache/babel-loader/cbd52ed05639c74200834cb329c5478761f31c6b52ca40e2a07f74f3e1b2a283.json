{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\projectnew\\\\frontend\\\\src\\\\pages\\\\Editor.jsx\",\n  _s = $RefreshSig$();\nimport { useForm, Controller } from 'react-hook-form';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './Editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Editor() {\n  _s();\n  const {\n    register,\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => {\n    console.log(\"Отправленные данные:\", data);\n    alert(\"Пост отправлен!\");\n    // Здесь можешь отправить на сервер через fetch/axios\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '700px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u0430\",\n        ...register(\"title\", {\n          required: \"Заголовок обязателен\"\n        }),\n        style: {\n          width: '100%',\n          padding: '10px',\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errors.title.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"content\",\n        control: control,\n        defaultValue: \"\",\n        rules: {\n          required: \"Контент обязателен\"\n        },\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(ReactQuill, {\n          theme: \"snow\",\n          value: field.value,\n          onChange: field.onChange,\n          style: {\n            height: '200px',\n            marginBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), errors.content && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errors.content.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: '10px 20px'\n        },\n        children: \"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Editor, \"5d5MbbLW/v0XPVHvV0SGxoRtGOg=\", false, function () {\n  return [useForm];\n});\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["useForm","Controller","ReactQuill","jsxDEV","_jsxDEV","Editor","_s","register","control","handleSubmit","formState","errors","onSubmit","data","console","log","alert","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","required","width","padding","marginBottom","title","color","message","name","defaultValue","rules","render","field","theme","value","onChange","height","content","type","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/projectnew/frontend/src/pages/Editor.jsx"],"sourcesContent":["import { useForm, Controller } from 'react-hook-form';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './Editor.css';\r\n\r\n\r\nfunction Editor() {\r\n\r\n  const {register, control, handleSubmit, formState: { errors }} = useForm();\r\n\r\n   const onSubmit = (data) => {\r\n    console.log(\"Отправленные данные:\", data);\r\n    alert(\"Пост отправлен!\");\r\n    // Здесь можешь отправить на сервер через fetch/axios\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '700px', margin: 'auto' }}>\r\n      <h2>Создать пост</h2>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n        <input\r\n          placeholder=\"Заголовок поста\"\r\n          {...register(\"title\", { required: \"Заголовок обязателен\" })}\r\n          style={{ width: '100%', padding: '10px', marginBottom: '10px' }}\r\n        />\r\n        {errors.title && <p style={{ color: 'red' }}>{errors.title.message}</p>}\r\n\r\n        <Controller\r\n          name=\"content\"\r\n          control={control}\r\n          defaultValue=\"\"\r\n          rules={{ required: \"Контент обязателен\" }}\r\n          render={({ field }) => (\r\n            <ReactQuill\r\n              theme=\"snow\"\r\n              value={field.value}\r\n              onChange={field.onChange}\r\n              style={{ height: '200px', marginBottom: '10px' }}\r\n            />\r\n          )}\r\n        />\r\n        {errors.content && <p style={{ color: 'red' }}>{errors.content.message}</p>}\r\n\r\n        <button type=\"submit\" style={{ padding: '10px 20px' }}>Опубликовать</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}